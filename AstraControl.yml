---
- hosts: giss
  become: true
  tasks:
    - name: Проверка наличия файлов Astra
      stat:
        path: "/etc/audit/rules.d/{{ item }}"
      loop:
        - astra-syslog.rules
        - astra-syslog.rules.dpkg-dist
        - audit.rules
        - 10-parsec-nw.rules
        - 10-parsec.rules
      register: file_check_results

    - name: Создание словаря результатов
      set_fact:
        audit_files: {}

    - name: Заполнение словаря результатов
      set_fact:
        audit_files: "{{ audit_files | combine({item.item: (1 if item.stat.exists else 0)}) }}"
      loop: "{{ file_check_results.results }}"

    - name: Проверка статуса astra-bash-lock
      command: astra-bash-lock status
      ignore_errors: yes
      register: bash_lock_status

    - name: Проверка статуса astra-commands-lock
      command: astra-commands-lock status
      ignore_errors: yes
      register: commands_lock_status

    - name: Проверка статуса astra-digsig-control
      command: astra-digsig-control status
      ignore_errors: yes
      register: digsig_control_status

    - name: Проверка статуса astra-console-lock
      command: astra-console-lock status
      ignore_errors: yes
      register: console_lock_status

    - name: Проверка статуса astra-docker-isolation
      command: astra-docker-isolation status
      ignore_errors: yes
      register: docker_isolation_status

    - name: Проверка статуса astra-format-lock
      command: astra-format-lock status
      ignore_errors: yes
      register: format_lock_status

    - name: Проверка статуса astra-hardened-control
      command: astra-hardened-control status
      ignore_errors: yes
      register: hardened_control_status

    - name: Проверка статуса astra-ilev1-control
      command: astra-ilev1-control status
      ignore_errors: yes
      register: ilev1_control_status

    - name: Проверка статуса astra-interpreters-lock
      command: astra-interpreters-lock status
      ignore_errors: yes
      register: interpreters_lock_status

    - name: Проверка статуса astra-lkrg-control
      command: astra-lkrg-control status
      ignore_errors: yes
      register: lkrg_control_status

    - name: Проверка статуса astra-macros-lock
      command: astra-macros-lock status
      ignore_errors: yes
      register: macros_lock_status

    - name: Проверка статуса astra-mac-control
      command: astra-mac-control status
      ignore_errors: yes
      register: mac_control_status

    - name: Проверка статуса astra-mic-control
      command: astra-mic-control status
      ignore_errors: yes
      register: mic_control_status

    - name: Проверка статуса astra-modban-lock
      command: astra-modban-lock status
      ignore_errors: yes
      register: modban_lock_status

    - name: Проверка статуса astra-modeswitch
      command: astra-modeswitch status
      ignore_errors: yes
      register: modeswitch_status

    - name: Проверка статуса astra-mode-apps
      command: astra-mode-apps status
      ignore_errors: yes
      register: mode_apps_status

    - name: Проверка статуса astra-mount-lock
      command: astra-mount-lock status
      ignore_errors: yes
      register: mount_lock_status

    - name: Проверка статуса astra-noautonet-control
      command: astra-noautonet-control status
      ignore_errors: yes
      register: noautonet_control_status

    - name: Проверка статуса astra-nobootmenu-control
      command: astra-nobootmenu-control status
      ignore_errors: yes
      register: nobootmenu_control_status

    - name: Проверка статуса astra-nochmodx-lock
      command: astra-nochmodx-lock status
      ignore_errors: yes
      register: nochmodx_lock_status

    - name: Проверка статуса astra-overlay
      command: astra-overlay status
      ignore_errors: yes
      register: overlay_status

    - name: Проверка статуса astra-ptrace-lock
      command: astra-ptrace-lock status
      ignore_errors: yes
      register: ptrace_lock_status

    - name: Проверка статуса astra-rootloginssh-control
      command: astra-rootloginssh-control status
      ignore_errors: yes
      register: rootloginssh_control_status

    - name: Проверка статуса astra-secdel-control
      command: astra-secdel-control status
      ignore_errors: yes
      register: secdel_control_status

    - name: Проверка статуса astra-shutdown-lock
      command: astra-shutdown-lock status
      ignore_errors: yes
      register: shutdown_lock_status

    - name: Проверка статуса astra-strictmode-control
      command: astra-strictmode-control status
      ignore_errors: yes
      register: strictmode_control_status

    - name: Проверка статуса astra-sudo-control
      command: astra-sudo-control status
      ignore_errors: yes
      register: sudo_control_status

    - name: Проверка статуса astra-sumac-lock
      command: astra-sumac-lock status
      ignore_errors: yes
      register: sumac_lock_status

    - name: Проверка статуса astra-swapwiper-control
      command: astra-swapwiper-control status
      ignore_errors: yes
      register: swapwiper_control_status

    - name: Проверка статуса astra-sysrq-lock
      command: astra-sysrq-lock status
      ignore_errors: yes
      register: sysrq_lock_status

    - name: Проверка статуса astra-ufw-control
      command: astra-ufw-control status
      ignore_errors: yes
      register: ufw_control_status

    - name: Проверка статуса astra-ulimits-control
      command: astra-ulimits-control status
      ignore_errors: yes
      register: ulimits_control_status

    - name: Сохранение результатов в JSON-файл на удаленном хосте
      copy:
        content: |
          {
            "bash_lock": {{ '1' if bash_lock_status.stdout == 'АКТИВНО' else '0' }},
            "commands_lock": {{ '1' if commands_lock_status.stdout == 'АКТИВНО' else '0' }},
            "digsig_control": {{ '1' if digsig_control_status.stdout == 'АКТИВНО' else '0' }},
            
            "astra-syslog.rules": {{ audit_files['astra-syslog.rules'] }},
            "astra-syslog.rules.dpkg-dist": {{ audit_files['astra-syslog.rules.dpkg-dist'] }},
            "audit.rules": {{ audit_files['audit.rules'] }},
            "10-parsec-nw.rules": {{ audit_files['10-parsec-nw.rules'] }},
            "10-parsec.rules": {{ audit_files['10-parsec.rules'] }},

            "console_lock": {{ '1' if console_lock_status.stdout == 'АКТИВНО' else '0' }},
            "docker_isolation": {{ '1' if docker_isolation_status.stdout == 'АКТИВНО' else '0' }},
            "format_lock": {{ '1' if format_lock_status.stdout == 'АКТИВНО' else '0' }},
            "hardened_control": {{ '1' if hardened_control_status.stdout == 'АКТИВНО' else '0' }},
            "ilev1_control": {{ '1' if ilev1_control_status.stdout == 'АКТИВНО' else '0' }},
            "interpreters_lock": {{ '1' if interpreters_lock_status.stdout == 'АКТИВНО' else '0' }},
            "lkrg_control": {{ '1' if lkrg_control_status.stdout == 'АКТИВНО' else '0' }},
            "macros_lock": {{ '1' if macros_lock_status.stdout == 'АКТИВНО' else '0' }},
            "mac_control": {{ '1' if mac_control_status.stdout == 'АКТИВНО' else '0' }},
            "mic_control": {{ '1' if mic_control_status.stdout == 'АКТИВНО' else '0' }},
            "modban_lock": {{ '1' if modban_lock_status.stdout == 'АКТИВНО' else '0' }},
            "modeswitch": {{ '1' if modeswitch_status.stdout == 'АКТИВНО' else '0' }},
            "mode_apps": {{ '1' if mode_apps_status.stdout == 'АКТИВНО' else '0' }},
            "mount_lock": {{ '1' if mount_lock_status.stdout == 'АКТИВНО' else '0' }},
            "noautonet_control": {{ '1' if noautonet_control_status.stdout == 'АКТИВНО' else '0' }},
            "nobootmenu_control": {{ '1' if nobootmenu_control_status.stdout == 'АКТИВНО' else '0' }},
            "nochmodx_lock": {{ '1' if nochmodx_lock_status.stdout == 'АКТИВНО' else '0' }},
            "overlay": {{ '1' if overlay_status.stdout == 'АКТИВНО' else '0' }},
            "ptrace_lock": {{ '1' if ptrace_lock_status.stdout == 'АКТИВНО' else '0' }},
            "rootloginssh_control": {{ '1' if rootloginssh_control_status.stdout == 'АКТИВНО' else '0' }},
            "secdel_control": {{ '1' if secdel_control_status.stdout == 'АКТИВНО' else '0' }},
            "shutdown_lock": {{ '1' if shutdown_lock_status.stdout == 'АКТИВНО' else '0' }},
            "strictmode_control": {{ '1' if strictmode_control_status.stdout == 'АКТИВНО' else '0' }},
            "sudo_control": {{ '1' if sudo_control_status.stdout == 'АКТИВНО' else '0' }},
            "sumac_lock": {{ '1' if sumac_lock_status.stdout == 'АКТИВНО' else '0' }},
            "swapwiper_control": {{ '1' if swapwiper_control_status.stdout == 'АКТИВНО' else '0' }},
            "sysrq_lock": {{ '1' if sysrq_lock_status.stdout == 'АКТИВНО' else '0' }},
            "ufw_control": {{ '1' if ufw_control_status.stdout == 'АКТИВНО' else '0' }},
            "ulimits_control": {{ '1' if ulimits_control_status.stdout == 'АКТИВНО' else '0' }}
          }
        dest: /tmp/audit_control.json

    - name: Получение JSON-файла на локальный хост
      fetch:
        src: /tmp/audit_control.json
        dest: /tmp/audit_control.json
        flat: yes

    - name: Вывод содержимого JSON-файла на локальном хосте
      debug:
        msg: "{{ lookup('file', '/tmp/audit_control.json') | from_json }}"
      delegate_to: localhost